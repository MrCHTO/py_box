# BigData

## <一>hadoop

### <1>MapReduce

* 键-值成对输入输出。


- <1.1>Map

  * 数据处理。
  

	- <1.1.1>Mapper类

- <1.2>Combine

  * 规约器。
  

	- <1.2.1>Combiner类

- <1.3>Reduce

  * 归约器。
  
  

	- <1.3.1>Reducer类

### <2>HDFS

- <2.1>NameNode

  * 工作于集群的Master（管理节点）。
  * 管理文件系统的命名空间。
  * 维护文件系统树以及内部的所有文件和目录（永久）包括命名空间的镜像文件和编辑的日志文件。
  * 记录每个文件中各个块所在的数据节点信息（临时）。
  

- <2.2>Secondary NameNode

  * 工作于集群的Master（管理节点）。
  * 定期备份NameNode，包括命名空间的镜像文件和编辑的日志文件。
  * 在NameNode发生故障时启动，并替代NameNode工作。
  * 管理员也可以平稳的进行管理节点的过度。
  

- <2.3>DataNode

  * 工作于Slave（工作节点/计算节点）。
  * 根据需要存储并检索数据块。
  * 向NameNode定期发送所存储的块的列表。
  

- <2.4>Blocak

  * 块。
  * 文件不会占满块空间。
  * 最小化寻址空间。
  * 简化空间管理。
  * Map一次只处理一个块。
  * 提高容错能力。
  * 提高可用性。
  

	- <2.4.1>Chunk

	  * 分块。
	  

	- <2.4.2>off-heap block cache

	  * 堆外块缓存。
	  

	- <2.4.3>指令

	  * Fsck：显示块信息。  -->  % hadoop fsck / -files -blocks
	  

- <2.5>Zookeeper

  * 故障转移控制器。
  * 管理将 NameNode 转换为Secondary NameNode 的活动。
  * 管理员可以手动发起故障转移。
  

### <3>Yarn

* 不提供通信手段。
* 以动态的方式提出资源申请。


- <3.1>Resource Manager

  * 工作于集群的Master（管理节点）的资源管理器。
  

- <3.2>Node Manager

  * 工作于集群的Slave（工作节点）的节点管理器。
  

- <3.3>Container

  * 是容器。
  * 用于执行特定应用程序的进程。
  * 有配置限制。
  

- <3.4>Schedule

	- <3.4.1>FIFO Scheduler

	  * FIFO调度器。
	  * 按照提交顺序运行应用（队列）。
	  * 每个作业（应用）必须等到轮到自己才可以运行。
	  * 大的应用占用集群中所有资源。
	  * 不适合共享集群。
	  * 小作业一直被阻塞，直至大作业完成。
	  

	- <3.4.2>Capacity Scheduler

	  * 容量调度器。
	  * 适合共享集群。
	  * 每个组织可以被分配到一定的集群资源。
	  * 拥有 “ 弹性队列 ”
	  

	- <3.4.3>Fair Scheduler

	  * 公平调度器。
	  * 为所有运行的应用公平平均分配资源。
	  * 通过权重来公平分配资源。
	  

- <3.5>TimeLine Server

  * 时间轴服务器。
  * 存储应用历史。
  

### <4>Hive

* 通用的、可伸缩的数据处理平台。
* Hive将数据组织为表。
* 能在原始数据上执行查询。
* 将文件放入仓库时，不会对文件进行修改，原样存储。
* 不强制使用特定文件格式。
*优势在于能将查询转化为一个作业，并执行作业。



- <4.1>HiveQL

  * HiveQL是Hive的查询语言。
  * 一般是大小写不敏感。
  
  

- <4.2>比较

	- <4.2.1>传统数据库

		- 写时模式

		  * 表的模式/结构是在数据加载的时候确定的。
		  * 数据再写入时对照模式进行检查。
		  * 如果加载数据时不符合模式，则拒绝加载。
		  * 有利于提升查询性能。
		  * 可以对列进行索引。
		  * 加载数据时会花费更多的时间。
		  

	- <4.2.2>Hive数据库

		- 读时模式

		  * 对数据的验证不在加载时进行验证。
		  * 对数据的验证在查询时进行。
		  * 可以使数据加载非常迅速。
		  * 数据加载时仅仅是文件的复制或者移动。
		  * 更灵活的使用表。
		  

### <4>Spark

### <Hbase>

*XMind - Trial Version*